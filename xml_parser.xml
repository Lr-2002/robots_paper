<?xml version="1.0" encoding="UTF-8"?>
<div id="BodyWrapper" class="ArticlePage" xmlns:ieee="http://www.ieeexplore.ieee.org"><div id="article">
<div class="section" id="sec1"><div class="header article-hdr"><div class="kicker">
		                        SECTION I.</div><h2>Introduction</h2></div><p>One challenge in legged robots control is the estimation of the state variables involved in the implementation of efficient and reactive closed-loop control laws. Among them, is the so-called centroidal state which expresses the under-actuated part of the system dynamics projected at its center of mass (CoM) (namely, the CoM position, the linear and angular momenta of the poly-articulated system) <a ref-type="bibr" anchor="ref1" id="context_ref_1_1">[1]</a>. In humanoid locomotion, where predictive control approaches are essential for ensuring the robot balance <a ref-type="bibr" anchor="ref2" id="context_ref_2_1">[2]</a>, it is one of the main reduced yet exact models used to make this control problem computationaly tractable <a ref-type="bibr" anchor="ref3" id="context_ref_3_1">[3]</a>.</p><p>Several methods have been proposed to estimate all or part of the centroidal state. They exploit kinematics measurements, kinetics ones or a combination of both, as discussed in <a ref-type="bibr" anchor="ref4" id="context_ref_4_1">[4]</a>, and they rely on three elementary approaches. A first method is to compute the CoM from the kinematics of the motion with the knowledge of the inertial parameters of each link <a ref-type="bibr" anchor="ref5" id="context_ref_5_1">[5]</a>. A second approach consists in using the contact forces which give access to the linear momentum of the system and to the CoM position, after double integration <a ref-type="bibr" anchor="ref5" id="context_ref_5_1">[5]</a>, <a ref-type="bibr" anchor="ref6" id="context_ref_6_1">[6]</a>. A third idea is to rely on the relationship between the zero-moment point, the CoM and the angular momentum, in order to complete the coverage of the centroidal state vector <a ref-type="bibr" anchor="ref7" id="context_ref_7_1">[7]</a>, <a ref-type="bibr" anchor="ref8" id="context_ref_8_1">[8]</a>, <a ref-type="bibr" anchor="ref9" id="context_ref_9_1">[9]</a>. Based on these three blocks, several filtering methods have been developed to enhance the quality of the estimation by trying to get rid of the undesirable effects of the different noises (model or measurements). They can be grouped into two main categories: the Kalman filtering methods and the complementary filtering ones. Kalman filtering methods are based on the well-known extended Kalman filter (EKF) <a ref-type="bibr" anchor="ref6" id="context_ref_6_1">[6]</a>, <a ref-type="bibr" anchor="ref7" id="context_ref_7_1">[7]</a>, <a ref-type="bibr" anchor="ref9" id="context_ref_9_1">[9]</a>, <a ref-type="bibr" anchor="ref10" id="context_ref_10_1">[10]</a> whereas complementary filtering consists in selecting the best possible bandwidth for each measurement signal in the spectral domain and then fuse them together <a ref-type="bibr" anchor="ref4" id="context_ref_4_1">[4]</a>, <a ref-type="bibr" anchor="ref11" id="context_ref_11_1">[11]</a>. In particular, the recursive complementary approach presented in <a ref-type="bibr" anchor="ref4" id="context_ref_4_1">[4]</a> has demonstrated its superiority over standard Kalman filtering for estimating the combination of the CoM position and the angular momentum.</p><div class="figure figure-full" id="fig1"><!--
          Workaround for combined images.Eg.- 1000116 Fig. 5
        --><div class="img-wrap"><a href="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill1-p7-baill-large.gif" data-fig-id="fig1"><img src="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill1-p7-baill-small.gif" alt="Fig. 1 - HRP-2 robot in simulation (left). The measured quantities are depicted in light blue (kinetics and kinematics data). The estimated centroidal state is depicted in orange. The estimation is performed over a trajectory of measurements and then compared to ground truth thanks to simulation data. HRP-2 robot (right) used in the experiments.&#10;"/><div class="zoom" title="View Larger Image"/></a></div><div class="figcaption"><b class="title">Fig. 1 </b><fig><p>HRP-2 robot in simulation (left). The measured quantities are depicted in light blue (kinetics and kinematics data). The estimated centroidal state is depicted in orange. The estimation is performed over a trajectory of measurements and then compared to ground truth thanks to simulation data. HRP-2 robot (right) used in the experiments.</p>
</fig></div><p class="links"><a href="/document/9561993/all-figures" class="all">Show All</a></p></div><p>In this work, we introduce a novel formulation for estimating the centroidal dynamics of a humanoid robot in contact, from both kinematics and kinetics data. Given a set of noisy input measurements and the expression of the system dynamics, the problem is formulated as a maximum a posteriori estimation (MAPE) one, ending up with the minimization of a quadratic cost function. Then, a differential dynamic programming (DDP) algorithm is used to minimize this quadratic function, with an additional step, implemented for estimating the initial conditions of the state, inspired by the work of <a ref-type="bibr" anchor="ref12" id="context_ref_12_1">[12]</a>. The estimated optimal state trajectory follows as closely as possible the system dynamics while being the most consistent with the sensors measurements. Thus, our formulation (MAPE-DDP) acts as a filter on the data enforcing the respect of the dynamics, and is therefore a new type of approach with regard to the aforementioned works. Unlike previous approaches, this framework acts on a measurement <i>trajectory</i> and thus benefits from the recursivity of the DDP algorithm which exploits the information of past and future measurements at one particular instant, improving the estimation of the whole state trajectory.</p><p>The paper is organized as follows: first, the state transition and observation equations are presented. Then, the maximum a posteriori formulation and the DDP algorithm are detailed, followed by a brief presentation of two other approaches to solve this centroidal estimation problem (EKF and recursive complementary filtering). Next, the three approaches are applied to the estimation of simulated walking motion of the HRP-2 robot, and a comparative analysis of the errors is provided. Finally, in order to illustrate its efficiency in experimental conditions, our MAPE-DDP estimator is applied to a real walking motion of the HRP-2 robot.</p></div>
<div class="section" id="sec2"><div class="header article-hdr"><div class="kicker">
		                        SECTION II.</div><h2>Mathematical Framework</h2></div><p>The centroidal dynamics of a system is the under-actuated part of its dynamics projected at its CoM <a ref-type="bibr" anchor="ref1" id="context_ref_1_2">[1]</a>. This projection can be seen as a change of basis, from the contact space, where physical interactions occur, to the CoM space. The underlying motivation comes from the fundamental principle of dynamics (Newton-Euler’s laws of motion) which states that the derivatives of angular and linear momentum expressed at the CoM are equivalent to the external contact wrench, which encompasses all the external interactions of the system with its environment. The equations of the system’s centroidal dynamics are:
<disp-formula id="deqn1.1-deqn1b" class="display-formula"><tex-math notation="LaTeX">\begin{align*} &amp; \mathop {\mathcal{P}}\limits^. \overset{\wedge}{=}\widehat {\mathbf{f}} = \sum\limits_i {{{\mathbf{f}}_{\mathbf{i}}}} + m{\mathbf{g}},\tag{1a} \\ &amp; \mathop {\mathcal{L}}\limits^. = \sum\limits_i {\left( {{{\mathbf{p}}_{\mathbf{i}}} - {\mathbf{c}}} \right)} \times {{\mathbf{f}}_{\mathbf{i}}},\tag{1b}\end{align*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{align*} &amp; \mathop {\mathcal{P}}\limits^. \overset{\wedge}{=}\widehat {\mathbf{f}} = \sum\limits_i {{{\mathbf{f}}_{\mathbf{i}}}} + m{\mathbf{g}},\tag{1a} \\ &amp; \mathop {\mathcal{L}}\limits^. = \sum\limits_i {\left( {{{\mathbf{p}}_{\mathbf{i}}} - {\mathbf{c}}} \right)} \times {{\mathbf{f}}_{\mathbf{i}}},\tag{1b}\end{align*}</span></span></disp-formula>
where <inline-formula id=""><tex-math notation="LaTeX">\$\mathcal{P} = m\mathop {\mathbf{c}}\limits^. \$</tex-math></inline-formula> is the linear momentum of the system; <b>c</b>, <inline-formula id=""><tex-math notation="LaTeX">\$\mathop {\text{c}}\limits^. {\text{ and }}\mathop {\text{c}}\limits^{..} \$</tex-math></inline-formula> are the system’s CoM position, velocity and acceleration; <inline-formula id=""><tex-math notation="LaTeX">\$\mathcal{L}\$</tex-math></inline-formula> is the angular momentum of the system expressed at its CoM; <b>f<sub>i</sub></b> and <b>p<sub>i</sub></b> are the contact forces and their points of application; <b>f</b> is the sum forces acting on the system, including the weight; <i>m</i> is the total mass of the robot; <b>g</b> is the gravitational acceleration.</p><div class="section_2" id="sec2a"><h3>A. State and measurements of the system</h3><p>The state of the system’s centroidal dynamics (<b>x</b>) and the set of chosen measurements (<b>y</b>) are: :
<disp-formula id="deqn2-deqn3" class="display-formula"><tex-math notation="LaTeX">\begin{align*} &amp; {\mathbf{x}} = {\left[ {\begin{array}{cccc} {{\mathbf{c}}\,\mathcal{P}}&amp;{\mathop {\mathcal{P}}\limits^. }&amp;\mathcal{L}&amp;{\mathop {\mathcal{L}}\limits^. } \end{array}} \right]^T},\tag{2} \\ &amp; {\mathbf{y}} = {\left[ {{{\mathbf{c}}^{\text{m}}}\tau _0^m{{\text{f}}^{\text{m}}}{\mathcal{L}^{\text{m}}}} \right]^T},\tag{3}\end{align*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{align*} &amp; {\mathbf{x}} = {\left[ {\begin{array}{cccc} {{\mathbf{c}}\,\mathcal{P}}&amp;{\mathop {\mathcal{P}}\limits^. }&amp;\mathcal{L}&amp;{\mathop {\mathcal{L}}\limits^. } \end{array}} \right]^T},\tag{2} \\ &amp; {\mathbf{y}} = {\left[ {{{\mathbf{c}}^{\text{m}}}\tau _0^m{{\text{f}}^{\text{m}}}{\mathcal{L}^{\text{m}}}} \right]^T},\tag{3}\end{align*}</span></span></disp-formula>
where <b>c<sup>m</sup></b> is the position of the CoM measured via forward kinematics; <b>f<sup>m</sup></b> and <inline-formula id=""><tex-math notation="LaTeX">\$\tau _0^m\$</tex-math></inline-formula> are the resulting force and torque of the external wrench measured with embedded force sensors and expressed at <b>0</b>; <inline-formula id=""><tex-math notation="LaTeX">\${\mathcal{L}^{\mathbf{m}}}\$</tex-math></inline-formula> is the angular momentum at the CoM deduced from the measurements of the joints velocities and mass distributions.</p></div><div class="section_2" id="sec2b"><h3>B. State transition and observation equations</h3><p>The dynamics of the state representation <a ref-type="disp-formula" anchor="deqn2-deqn3" href="#deqn2-deqn3" class="fulltext-link">(2)</a> is of the form:
<disp-formula id="deqn4" class="display-formula"><tex-math notation="LaTeX">\begin{equation*}\mathop {\mathbf{x}}\limits^. = f({\mathbf{x}},{\mathbf{\omega }}),\tag{4}\end{equation*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{equation*}\mathop {\mathbf{x}}\limits^. = f({\mathbf{x}},{\mathbf{\omega }}),\tag{4}\end{equation*}</span></span></disp-formula>
with <i>ω</i> the control input. The first-order approximation of the discretized state transition equation yields:
<disp-formula id="deqn5" class="display-formula"><tex-math notation="LaTeX">\begin{equation*}\begin{array}{c} {{\mathbf{x}}_{k + 1}} = f\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) \overset{\wedge}{=}\hat A{{\mathbf{x}}_{\mathbf{k}}} + B{{\mathbf{\omega }}_{\mathbf{k}}}, \\ A\hat = \left[ {\begin{array}{ccccc} {1\!\!\!\!{\text l}}&amp;{1\!\!\!\!{\text l}\frac{T}{m}}&amp;{1\!\!\!\!{\text l}\frac{{{T^2}}}{{2m}}}&amp;{0\!\!1}&amp;{0\!\!1} \\ {0\!\!1}&amp;{1\!\!\!\!{\text l}}&amp;{1\!\!\!\!{\text l}T}&amp;{0\!\!1}&amp;{0\!\!1} \\ 0&amp;0&amp;{1\!\!\!\!{\text l}}&amp;0&amp;0 \\ {0\!\!1}&amp;{0\!\!1}&amp;{0\!\!1}&amp;{1\!\!\!\!{\text l}}&amp;{1\!\!\!\!{\text l}T} \\ {0\!\!1}&amp;{0\!\!1}&amp;{0\!\!1}&amp;{0\!\!1}&amp;{1\!\!\!\!{\text l}} \end{array}} \right],B\hat = \left[ {\begin{array}{cc} {1\!\!\!\!{\text l}{T^3}/(6m)}&amp;{0\!\!1} \\ {1\!\!\!\!{\text l}{T^2}/2}&amp;{0\!\!1} \\ {1\!\!\!\!{\text l}T}&amp;{0\!\!1} \\ {0\!\!1}&amp;{1\!\!\!\!{\text l}{T^2}/2} \\ {0\!\!1}&amp;{1\!\!\!\!{\text l}T} \end{array}} \right], \end{array} \tag{5}\end{equation*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{equation*}\begin{array}{c} {{\mathbf{x}}_{k + 1}} = f\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) \overset{\wedge}{=}\hat A{{\mathbf{x}}_{\mathbf{k}}} + B{{\mathbf{\omega }}_{\mathbf{k}}}, \\ A\hat = \left[ {\begin{array}{ccccc} {1\!\!\!\!{\text l}}&amp;{1\!\!\!\!{\text l}\frac{T}{m}}&amp;{1\!\!\!\!{\text l}\frac{{{T^2}}}{{2m}}}&amp;{0\!\!1}&amp;{0\!\!1} \\ {0\!\!1}&amp;{1\!\!\!\!{\text l}}&amp;{1\!\!\!\!{\text l}T}&amp;{0\!\!1}&amp;{0\!\!1} \\ 0&amp;0&amp;{1\!\!\!\!{\text l}}&amp;0&amp;0 \\ {0\!\!1}&amp;{0\!\!1}&amp;{0\!\!1}&amp;{1\!\!\!\!{\text l}}&amp;{1\!\!\!\!{\text l}T} \\ {0\!\!1}&amp;{0\!\!1}&amp;{0\!\!1}&amp;{0\!\!1}&amp;{1\!\!\!\!{\text l}} \end{array}} \right],B\hat = \left[ {\begin{array}{cc} {1\!\!\!\!{\text l}{T^3}/(6m)}&amp;{0\!\!1} \\ {1\!\!\!\!{\text l}{T^2}/2}&amp;{0\!\!1} \\ {1\!\!\!\!{\text l}T}&amp;{0\!\!1} \\ {0\!\!1}&amp;{1\!\!\!\!{\text l}{T^2}/2} \\ {0\!\!1}&amp;{1\!\!\!\!{\text l}T} \end{array}} \right], \end{array} \tag{5}\end{equation*}</span></span></disp-formula>
where <inline-formula id=""><tex-math notation="LaTeX">\${{\mathbf{\omega }}_{\mathbf{k}}} = \left[ {{\mathbf{\omega }}_k^{\mathop {\mathcal{P}}\limits^{..} }{\mathbf{\omega }}_k^{\mathop {\text{L}}\limits^{..} }} \right],{\text{ with }}{\mathbf{\omega }}_k^{\mathop {\mathcal{P}}\limits^{..} }{\text{ and }}{\mathbf{\omega }}_k^{\mathop {\mathcal{L}}\limits^{..} }\$</tex-math></inline-formula> random samples drawn from <inline-formula id=""><tex-math notation="LaTeX">\$\mathcal{N}\left( {0,\Sigma _{\ddot p}^2} \right){\text{ and }}\mathcal{N}\left( {0,\Sigma _{\mathop {\mathcal{L}}\limits^{..} }^2} \right)\$</tex-math></inline-formula> respectively, representing unknown second derivatives of the linear and angular momenta (further combined into <i>ω<sub>k</sub></i> drawn from <inline-formula id=""><tex-math notation="LaTeX">\$\mathcal{N}\left( {0,\Sigma _{{\omega _k}}^2} \right)\$</tex-math></inline-formula>). T is the time between two samples. <inline-formula id=""><tex-math notation="LaTeX">\$0\!\!1\$</tex-math></inline-formula> and <inline-formula id=""><tex-math notation="LaTeX">\$1\!\!\!\!{\text l}\$</tex-math></inline-formula> are the null element and the identity of ℝ<sup>3<i>×</i>3</sup> respectively. The discretized observation equation for this model is:
<disp-formula id="deqn6" class="display-formula"><tex-math notation="LaTeX">\begin{equation*}\begin{array}{c} {\widehat {\mathbf{y}}_k}\hat = g\left( {{{\mathbf{x}}_{\mathbf{k}}}} \right) + {\eta _k}\hat C\left( {{{\mathbf{x}}_{\mathbf{k}}}} \right){{\mathbf{x}}_{\mathbf{k}}} + {\eta _k}, \\ C\left( {{{\mathbf{x}}_{\mathbf{k}}}} \right)\hat = \left[ {\begin{array}{ccccc} {1\!\!\!\!{\text l}}&amp;{0\!\!1}&amp;{0\!\!1}&amp;{0\!\!1}&amp;{0\!\!1} \\ {0\!\!1}&amp;{0\!\!1}&amp;{{c_k} \times }&amp;{0\!\!1}&amp;{1\!\!\!\!{\text l}} \\ {0\!\!1}&amp;{0\!\!1}&amp;{1\!\!\!\!{\text l}}&amp;{0\!\!1}&amp;{0\!\!1} \\ {0\!\!1}&amp;{0\!\!1}&amp;{0\!\!1}&amp;{1\!\!\!\!{\text l}}&amp;{0\!\!1} \end{array}} \right], \end{array} \tag{6}\end{equation*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{equation*}\begin{array}{c} {\widehat {\mathbf{y}}_k}\hat = g\left( {{{\mathbf{x}}_{\mathbf{k}}}} \right) + {\eta _k}\hat C\left( {{{\mathbf{x}}_{\mathbf{k}}}} \right){{\mathbf{x}}_{\mathbf{k}}} + {\eta _k}, \\ C\left( {{{\mathbf{x}}_{\mathbf{k}}}} \right)\hat = \left[ {\begin{array}{ccccc} {1\!\!\!\!{\text l}}&amp;{0\!\!1}&amp;{0\!\!1}&amp;{0\!\!1}&amp;{0\!\!1} \\ {0\!\!1}&amp;{0\!\!1}&amp;{{c_k} \times }&amp;{0\!\!1}&amp;{1\!\!\!\!{\text l}} \\ {0\!\!1}&amp;{0\!\!1}&amp;{1\!\!\!\!{\text l}}&amp;{0\!\!1}&amp;{0\!\!1} \\ {0\!\!1}&amp;{0\!\!1}&amp;{0\!\!1}&amp;{1\!\!\!\!{\text l}}&amp;{0\!\!1} \end{array}} \right], \end{array} \tag{6}\end{equation*}</span></span></disp-formula>
where <inline-formula id=""><tex-math notation="LaTeX">\${\eta _k} = {\left[ {\eta _k^{\text{c}},{\mathbf{\eta }}_k^\tau ,{\mathbf{\eta }}_k^f,{\mathbf{\eta }}_k^{\mathcal{L}}} \right]^T}\$</tex-math></inline-formula> are random samples drawn from <inline-formula id=""><tex-math notation="LaTeX">\$\mathcal{N}\left( {0,\Sigma _{{\eta _k}}^2} \right)\$</tex-math></inline-formula> representing noises on the measurements. <b>c</b><i><sub>k</sub>×</i> denotes the skew-symmetric matrix associated with the vector product of <b>c</b><i><sub>k</sub>.</i> The second line of the vector <a ref-type="disp-formula" anchor="deqn6" href="#deqn6" class="fulltext-link">Eq. 6</a> comes from the fact that:
<disp-formula id="deqn7" class="display-formula"><tex-math notation="LaTeX">\begin{equation*}\mathop {\mathcal{L}}\limits^. = {\tau _0} + {\mathbf{f}} \times {\mathbf{c}}.\tag{7}\end{equation*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{equation*}\mathop {\mathcal{L}}\limits^. = {\tau _0} + {\mathbf{f}} \times {\mathbf{c}}.\tag{7}\end{equation*}</span></span></disp-formula></p><p>It is important to notice at this stage that the dynamics <i>f</i> is linear and only the observation model <i>g</i> is nonlinear. More precisely, this observation function is bilinear (as a generic property of the cross product operator).</p></div></div>
<div class="section" id="sec3"><div class="header article-hdr"><div class="kicker">
		                        SECTION III.</div><h2>Differential Dynamic Programming For Maximum A Posteriori Estimation (MAPE-DDP)</h2></div><div class="section_2" id="sec3a"><h3>A. Problem formulation</h3><p>In the following developments, let us assume that <b>x<sub>i</sub></b> ∈ ℝ<i><sup>X</sup></i>, and that <b>y<sub>i</sub></b> ∈ ℝ<i><sup>Y</sup>.</i> The estimation problem is formulated as a MAPE one. Solving it amounts to maximizing the likelihood <i>L</i> of the joint probability <i>p</i>(<b>x</b>, <b>y</b>) on a horizon of <i>N</i> time steps:
<disp-formula id="deqn8-deqn9" class="display-formula"><tex-math notation="LaTeX">\begin{align*} L({\mathbf{x}},{\mathbf{y}}) &amp; = \left( {p\left( {{{\mathbf{x}}_{\mathbf{0}}}} \right)\prod\limits_{k = 1}^N p \left( {{{\mathbf{y}}_{\mathbf{k}}}\mid {{\mathbf{x}}_{\mathbf{k}}}} \right)p\left( {{{\mathbf{x}}_{\mathbf{k}}}\mid {{\mathbf{x}}_{{\mathbf{k}} - 1}}} \right)} \right),\tag{8} \\ &amp; {{\mathbf{x}}^{\ast}} = \mathop {\arg \max }\limits_{\mathbf{x}} L({\mathbf{x}},{\mathbf{y}}).\tag{9}\end{align*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{align*} L({\mathbf{x}},{\mathbf{y}}) &amp; = \left( {p\left( {{{\mathbf{x}}_{\mathbf{0}}}} \right)\prod\limits_{k = 1}^N p \left( {{{\mathbf{y}}_{\mathbf{k}}}\mid {{\mathbf{x}}_{\mathbf{k}}}} \right)p\left( {{{\mathbf{x}}_{\mathbf{k}}}\mid {{\mathbf{x}}_{{\mathbf{k}} - 1}}} \right)} \right),\tag{8} \\ &amp; {{\mathbf{x}}^{\ast}} = \mathop {\arg \max }\limits_{\mathbf{x}} L({\mathbf{x}},{\mathbf{y}}).\tag{9}\end{align*}</span></span></disp-formula></p><p>Then, the optimal solution <b>x<sup>*</sup></b> is the state trajectory that most likely yielded the measurements <b>y</b>, limiting how far each state <b>x<sub>k</sub></b> can be from the known dynamics of the previous one, <b>x</b><sub><b>k</b><i>−</i><b>1</b></sub>. Under the Gaussian assumption on the jerk of the state and on the noise of the measurements, the conditional probabilities in <a ref-type="disp-formula" anchor="deqn8-deqn9" href="#deqn8-deqn9" class="fulltext-link">(8)</a> are:
<disp-formula id="deqn10.1-deqn10c" class="display-formula"><tex-math notation="LaTeX">\begin{gather*}p\left( {{{\mathbf{x}}_{\mathbf{0}}}} \right)\sim \mathcal{N}\left( {{{\widehat {\mathbf{x}}}_{\mathbf{0}}},\Sigma _{{{\mathbf{x}}_0}}^2} \right),\tag{10a} \\ p\left( {{{\mathbf{x}}_{\text{k}}}\mid {{\mathbf{x}}_{{\text{k}} - 1}}} \right)\sim \mathcal{N}\left( {A{{\text{x}}_{\text{k}}},\Sigma _{{\omega _k}}^2} \right),\tag{10b} \\ p\left( {{{\mathbf{y}}_{\mathbf{k}}}\mid {{\mathbf{x}}_{\mathbf{k}}}} \right)\sim \mathcal{N}\left( {C\left( {{{\mathbf{x}}_{\mathbf{k}}}} \right){{\mathbf{x}}_{\mathbf{k}}},\Sigma _{{\eta _k}}^2} \right).\tag{10c}\end{gather*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{gather*}p\left( {{{\mathbf{x}}_{\mathbf{0}}}} \right)\sim \mathcal{N}\left( {{{\widehat {\mathbf{x}}}_{\mathbf{0}}},\Sigma _{{{\mathbf{x}}_0}}^2} \right),\tag{10a} \\ p\left( {{{\mathbf{x}}_{\text{k}}}\mid {{\mathbf{x}}_{{\text{k}} - 1}}} \right)\sim \mathcal{N}\left( {A{{\text{x}}_{\text{k}}},\Sigma _{{\omega _k}}^2} \right),\tag{10b} \\ p\left( {{{\mathbf{y}}_{\mathbf{k}}}\mid {{\mathbf{x}}_{\mathbf{k}}}} \right)\sim \mathcal{N}\left( {C\left( {{{\mathbf{x}}_{\mathbf{k}}}} \right){{\mathbf{x}}_{\mathbf{k}}},\Sigma _{{\eta _k}}^2} \right).\tag{10c}\end{gather*}</span></span></disp-formula></p><p>The mean values of the probability density functions in <a ref-type="disp-formula" anchor="deqn10.1-deqn10c" href="#deqn10.1-deqn10c" class="fulltext-link">Eqs. (10b)</a> and <a ref-type="disp-formula" anchor="deqn10.1-deqn10c" href="#deqn10.1-deqn10c" class="fulltext-link">(10c)</a> represent the deterministic parts of <a ref-type="disp-formula" anchor="deqn5" href="#deqn5" class="fulltext-link">Eqs. (5)</a> and <a ref-type="disp-formula" anchor="deqn6" href="#deqn6" class="fulltext-link">Eqs. (6)</a>. This implies that the random part of the dynamics is null on average, which is a reasonable physical assumption. Indeed, over a sufficient time horizon, a non-zero mean value of the concerned physical quantities <inline-formula id=""><tex-math notation="LaTeX">\$(\mathop {\mathcal{P}}\limits^. {\text{ and }}\mathop {\mathcal{L}}\limits^. )\$</tex-math></inline-formula> would result in a diverging dynamics of the CoM through forward integration. Injecting <a ref-type="disp-formula" anchor="deqn10.1-deqn10c" href="#deqn10.1-deqn10c" class="fulltext-link">(10)</a> into <a ref-type="disp-formula" anchor="deqn8-deqn9" href="#deqn8-deqn9" class="fulltext-link">(8)</a> and taking the negative natural log of this expression changes our generic maximization problem into an equivalent quadratic minimization one:
<disp-formula id="deqn11" class="display-formula"><tex-math notation="LaTeX">\begin{align*} - \log \left(L({\mathbf{x}},{\mathbf{y}})\right) &amp; \propto \frac{1}{2}\left\| {{{\mathbf{x}}_0} - {{\widehat {\mathbf{x}}}_0}} \right\|_{\Sigma _{{{\mathbf{x}}_0}}^{ - 1}}^2 \\ &amp; + \sum\limits_{k = 1}^N {\frac{1}{2}} \left( {\left\| {{{\mathbf{\omega }}_k}} \right\|_{\Sigma _{{{\mathbf{\omega }}_k}}^{ - 1}}^2 + \left\| {g\left( {{{\mathbf{x}}_{\mathbf{k}}}} \right) - {{\mathbf{y}}_{\mathbf{k}}}} \right\|_{\Sigma _{{\eta _k}}^{ - 1}}^2} \right) \\ &amp; \hat = \frac{1}{2}\left\| {{{\mathbf{x}}_0} - {{\widehat {\mathbf{x}}}_{\mathbf{0}}}} \right\|_{\Sigma _{{{\mathbf{x}}_0}}^{ - 1}}^2 + \sum\limits_{k = 1}^N {{l_k}} \left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right). \tag{11}\end{align*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{align*} - \log \left(L({\mathbf{x}},{\mathbf{y}})\right) &amp; \propto \frac{1}{2}\left\| {{{\mathbf{x}}_0} - {{\widehat {\mathbf{x}}}_0}} \right\|_{\Sigma _{{{\mathbf{x}}_0}}^{ - 1}}^2 \\ &amp; + \sum\limits_{k = 1}^N {\frac{1}{2}} \left( {\left\| {{{\mathbf{\omega }}_k}} \right\|_{\Sigma _{{{\mathbf{\omega }}_k}}^{ - 1}}^2 + \left\| {g\left( {{{\mathbf{x}}_{\mathbf{k}}}} \right) - {{\mathbf{y}}_{\mathbf{k}}}} \right\|_{\Sigma _{{\eta _k}}^{ - 1}}^2} \right) \\ &amp; \hat = \frac{1}{2}\left\| {{{\mathbf{x}}_0} - {{\widehat {\mathbf{x}}}_{\mathbf{0}}}} \right\|_{\Sigma _{{{\mathbf{x}}_0}}^{ - 1}}^2 + \sum\limits_{k = 1}^N {{l_k}} \left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right). \tag{11}\end{align*}</span></span></disp-formula></p><p>In the running cost <i>l<sub>k</sub></i>, two different contributions can be found. <inline-formula id=""><tex-math notation="LaTeX">\$\left\| {{{\mathbf{\omega }}_k}} \right\|_{\Sigma _{{{\mathbf{\omega }}_{\mathbf{k}}}}^{ - 1}}^2\$</tex-math></inline-formula> is the cost which limits the norm of the random part of the dynamics. <inline-formula id=""><tex-math notation="LaTeX">\$\left\| {g\left( {{{\mathbf{x}}_{\mathbf{k}}}} \right) - {{\mathbf{y}}_{\mathbf{k}}}} \right\|_{\Sigma _{{\eta _k}}^{ - 1}}^2\$</tex-math></inline-formula> is the cost which limits the discrepancy between the prediction and the measurements. These costs imply a tuning flexibility for the end user, contained in the covariation matrices <inline-formula id=""><tex-math notation="LaTeX">\${\Sigma _{{{\mathbf{\omega }}_{\mathbf{k}}}}}\$</tex-math></inline-formula> and <inline-formula id=""><tex-math notation="LaTeX">\${\Sigma _{{{\mathbf{\eta }}_{\mathbf{k}}}}}\$</tex-math></inline-formula>. They enable to adjust the belief that one has on the quality of a given measurement, with regard to another one, as well as the relative penalty to apply on the norm of the unknown dynamics with regard to the one applied on the measurement discrepancy. Starting from this point, this estimation problem can be viewed as an equivalent control problem. The system’s dynamics is driven by the unknown dynamics <i>ω<sub>k</sub></i>, and the measurements can be considered as attraction points that must be yielded at best by the optimal trajectory, through matrix <i>C</i> (see <a ref-type="disp-formula" anchor="deqn6" href="#deqn6" class="fulltext-link">Eq. (6)</a>). This problem can efficiently be solved by using DDP, the cost-to-go being <i>J<sub>k</sub></i>, from state <b>x</b><i><sub>k</sub></i>, the unknown dynamics <i>ω<sub>k</sub></i> being applied:
<disp-formula id="deqn12" class="display-formula"><tex-math notation="LaTeX">\begin{equation*}{J_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) = \sum\limits_{k = 1}^N {{l_k}} \left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right).\tag{12}\end{equation*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{equation*}{J_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) = \sum\limits_{k = 1}^N {{l_k}} \left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right).\tag{12}\end{equation*}</span></span></disp-formula></p><p>The optimal value function at time k is denoted by <inline-formula id=""><tex-math notation="LaTeX">\${\mathcal{V}_k}\$</tex-math></inline-formula>:
<disp-formula id="deqn13" class="display-formula"><tex-math notation="LaTeX">\begin{equation*}{\mathcal{V}_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) = \mathop {\min }\limits_{{{\mathbf{\omega }}_k}} {J_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right).\tag{13}\end{equation*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{equation*}{\mathcal{V}_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) = \mathop {\min }\limits_{{{\mathbf{\omega }}_k}} {J_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right).\tag{13}\end{equation*}</span></span></disp-formula></p><p>Recursively, through the Hamilton-Jacobi-Belman equation, <a ref-type="disp-formula" anchor="deqn13" href="#deqn13" class="fulltext-link">(13)</a> can be expressed as:
<disp-formula id="deqn14" class="display-formula"><tex-math notation="LaTeX">\begin{equation*}{\mathcal{V}_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) = \mathop {\min }\limits_{{{\mathbf{\omega }}_{\mathbf{k}}}} {l_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) + {\mathcal{V}_{k + 1}}\left( {f\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right)} \right).\tag{14}\end{equation*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{equation*}{\mathcal{V}_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) = \mathop {\min }\limits_{{{\mathbf{\omega }}_{\mathbf{k}}}} {l_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) + {\mathcal{V}_{k + 1}}\left( {f\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right)} \right).\tag{14}\end{equation*}</span></span></disp-formula></p><p>Let <i>Q<sub>k</sub></i> denote the unoptimized value function given by:
<disp-formula id="deqn15" class="display-formula"><tex-math notation="LaTeX">\begin{equation*}{Q_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) = {l_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) + {\mathcal{V}_{k + 1}}\left( {f\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right)} \right).\tag{15}\end{equation*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{equation*}{Q_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) = {l_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) + {\mathcal{V}_{k + 1}}\left( {f\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right)} \right).\tag{15}\end{equation*}</span></span></disp-formula></p><p>A second order Taylor expansion of this function is computed, in order to determine a cost change accordingly:
<disp-formula id="deqn16" class="display-formula"><tex-math notation="LaTeX">\begin{align*} \Delta {Q_k} &amp; = {Q_k}\left( {{{\mathbf{x}}_{\mathbf{k}}} + \delta {{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}} + \delta {{\mathbf{\omega }}_{\mathbf{k}}}} \right) - {Q_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) \\ &amp; \approx \frac{1}{2}{\left[ {\begin{array}{c} 1 \\ {\delta {{\mathbf{x}}_{\mathbf{k}}}} \\ {\delta {{\mathbf{\omega }}_k}} \end{array}} \right]^T}\left[ {\begin{array}{ccc} 0&amp;{{\nabla _{{{\mathbf{x}}_{\mathbf{k}}}}}Q_k^T}&amp;{{\nabla _{{{\mathbf{\omega }}_k}}}Q_k^T} \\ {{\nabla _{{{\mathbf{x}}_{\mathbf{k}}}}}{Q_k}}&amp;{\nabla _{{{\mathbf{x}}_{\mathbf{k}}}}^2Q_k^T}&amp;{{\nabla _{{{\mathbf{x}}_{\mathbf{k}}}{\omega _k}}}Q_k^T} \\ {{\nabla _{{{\mathbf{\omega }}_k}}}{Q_k}}&amp;{{\nabla _{{{\mathbf{\omega }}_k}{{\mathbf{x}}_{\mathbf{k}}}}}Q_k^T}&amp;{\nabla _{{{\mathbf{\omega }}_k}}^2Q_k^T} \end{array}} \right]\left[ {\begin{array}{c} 1 \\ {\delta {{\mathbf{x}}_{\mathbf{k}}}} \\ {\delta {{\mathbf{\omega }}_k}} \end{array}} \right] \tag{16}\end{align*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{align*} \Delta {Q_k} &amp; = {Q_k}\left( {{{\mathbf{x}}_{\mathbf{k}}} + \delta {{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}} + \delta {{\mathbf{\omega }}_{\mathbf{k}}}} \right) - {Q_k}\left( {{{\mathbf{x}}_{\mathbf{k}}},{{\mathbf{\omega }}_{\mathbf{k}}}} \right) \\ &amp; \approx \frac{1}{2}{\left[ {\begin{array}{c} 1 \\ {\delta {{\mathbf{x}}_{\mathbf{k}}}} \\ {\delta {{\mathbf{\omega }}_k}} \end{array}} \right]^T}\left[ {\begin{array}{ccc} 0&amp;{{\nabla _{{{\mathbf{x}}_{\mathbf{k}}}}}Q_k^T}&amp;{{\nabla _{{{\mathbf{\omega }}_k}}}Q_k^T} \\ {{\nabla _{{{\mathbf{x}}_{\mathbf{k}}}}}{Q_k}}&amp;{\nabla _{{{\mathbf{x}}_{\mathbf{k}}}}^2Q_k^T}&amp;{{\nabla _{{{\mathbf{x}}_{\mathbf{k}}}{\omega _k}}}Q_k^T} \\ {{\nabla _{{{\mathbf{\omega }}_k}}}{Q_k}}&amp;{{\nabla _{{{\mathbf{\omega }}_k}{{\mathbf{x}}_{\mathbf{k}}}}}Q_k^T}&amp;{\nabla _{{{\mathbf{\omega }}_k}}^2Q_k^T} \end{array}} \right]\left[ {\begin{array}{c} 1 \\ {\delta {{\mathbf{x}}_{\mathbf{k}}}} \\ {\delta {{\mathbf{\omega }}_k}} \end{array}} \right] \tag{16}\end{align*}</span></span></disp-formula></p><p>The optimal change <inline-formula id=""><tex-math notation="LaTeX">\$\delta {\mathbf{\omega }}_{\mathbf{k}}^{\ast}\$</tex-math></inline-formula> for this quadratic approximation of <i>Q<sub>k</sub></i>(<b>x<sub>k</sub></b>, <i>ω<sub>k</sub></i>) is:
<disp-formula id="deqn17" class="display-formula"><tex-math notation="LaTeX">\begin{equation*}\begin{array}{l} \delta {\mathbf{\omega }}_{\mathbf{k}}^{\ast} = - \nabla _{{{\mathbf{\omega }}_k}}^2Q_k^{ - 1}{\nabla _{{{\mathbf{x}}_{\mathbf{k}}}{\omega _k}}}{Q_k}\cdot\delta {{\mathbf{x}}_{\mathbf{k}}} - {\alpha _k}\nabla _{{{\mathbf{\omega }}_k}}^2Q_k^{ - 1}{\nabla _{{{\mathbf{\omega }}_k}}}{Q_k}, \\ \delta {\mathbf{\omega }}_{\mathbf{k}}^{\ast}\hat = - {K_k}\delta {{\mathbf{x}}_{\mathbf{k}}} - {\alpha _k}{k_k}, \end{array} \tag{17}\end{equation*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{equation*}\begin{array}{l} \delta {\mathbf{\omega }}_{\mathbf{k}}^{\ast} = - \nabla _{{{\mathbf{\omega }}_k}}^2Q_k^{ - 1}{\nabla _{{{\mathbf{x}}_{\mathbf{k}}}{\omega _k}}}{Q_k}\cdot\delta {{\mathbf{x}}_{\mathbf{k}}} - {\alpha _k}\nabla _{{{\mathbf{\omega }}_k}}^2Q_k^{ - 1}{\nabla _{{{\mathbf{\omega }}_k}}}{Q_k}, \\ \delta {\mathbf{\omega }}_{\mathbf{k}}^{\ast}\hat = - {K_k}\delta {{\mathbf{x}}_{\mathbf{k}}} - {\alpha _k}{k_k}, \end{array} \tag{17}\end{equation*}</span></span></disp-formula>
where <i>α<sub>k</sub></i> is the line search step size, <i>k<sub>k</sub></i> and <i>K<sub>k</sub></i> are feedback gains. The partial derivatives of <i>Q<sub>k</sub></i> <inline-formula id=""><tex-math notation="LaTeX">\$\left( {{\nabla _{{{\text{x}}_{\mathbf{k}}}}}{Q_k},\quad {\nabla _{{{\mathbf{\omega }}_k}}}{Q_k},\quad \nabla _{{{\mathbf{x}}_{\mathbf{k}}}}^2{Q_k},\quad \nabla _{{{\mathbf{\omega }}_k}}^2{Q_k},\quad \nabla _{{{\mathbf{\omega }}_k}{{\text{x}}_{\mathbf{k}}}}^2{Q_k}} \right)\$</tex-math></inline-formula> are reported in <a ref-type="bibr" anchor="ref13" id="context_ref_13_3a">[13]</a>.</p></div><div class="section_2" id="sec3b"><h3>B. DDP algorithm with initial state retrieval</h3><p>The update equations used for computing the value of the cost function derivatives <inline-formula id=""><tex-math notation="LaTeX">\${\mathcal{V}_x}{\text{ and }}{\mathcal{V}_{xx}}\$</tex-math></inline-formula> after optimization are:
<disp-formula id="deqn18-deqn19" class="display-formula"><tex-math notation="LaTeX">\begin{align*} {\mathcal{V}_x} &amp; = {Q_{x,k}} - {Q_{\omega ,k}}Q_{\omega \omega ,k}^{ - 1}{Q_{\omega x,k}}\tag{18} \\ {\mathcal{V}_{xx}} &amp; = {Q_{xx,k}} - {Q_{x\omega ,k}}Q_{\omega \omega ,k}^{ - 1}{Q_{\omega x,k}}\tag{19}\end{align*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{align*} {\mathcal{V}_x} &amp; = {Q_{x,k}} - {Q_{\omega ,k}}Q_{\omega \omega ,k}^{ - 1}{Q_{\omega x,k}}\tag{18} \\ {\mathcal{V}_{xx}} &amp; = {Q_{xx,k}} - {Q_{x\omega ,k}}Q_{\omega \omega ,k}^{ - 1}{Q_{\omega x,k}}\tag{19}\end{align*}</span></span></disp-formula></p><p>Recursively computing the local quadratic models of <inline-formula id=""><tex-math notation="LaTeX">\${\mathcal{V}_k}\$</tex-math></inline-formula> and the optimal estimation changes <inline-formula id=""><tex-math notation="LaTeX">\$\delta {\mathbf{\omega }}_{\mathbf{k}}^{\ast}\$</tex-math></inline-formula>, from <i>k</i> = <i>N −</i> 1 down to <i>k</i> = 1, constitutes the backward pass. In the following, we introduce a method, inspired from <a ref-type="bibr" anchor="ref12" id="context_ref_12_3b">[12]</a>, for estimating the initial conditions of the state variables that depends on the integration of higher order variables once the backward pass is achieved. In our case of application this step retrieves the initial value of the state vector.</p><p>In the sense of optimal estimation, the best initial conditions <i>δρ<sup>*</sup></i> of the problem are the ones that lead to a minimal cost to go at step 0. This amounts to perform a last step at the end of the backward pass that computes a locally optimal increment in the initial conditions. In the forward pass, this leads to an impulse dynamics of the system at time zero that can be formulated as:
<disp-formula id="deqn20" class="display-formula"><tex-math notation="LaTeX">\begin{equation*}\widehat {\mathbf{x}}_0^\prime = {\widehat {\mathbf{x}}_0} + P\delta {\rho ^ \star },\tag{20}\end{equation*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{equation*}\widehat {\mathbf{x}}_0^\prime = {\widehat {\mathbf{x}}_0} + P\delta {\rho ^ \star },\tag{20}\end{equation*}</span></span></disp-formula>
where <i>P</i> maps a change in the initial conditions to a change in the state. In our case, as the objective is to estimate the initial conditions of the whole state, <i>P</i> is the identity of ℝ<i><sup>X×X</sup>.</i> Similarly to <inline-formula id=""><tex-math notation="LaTeX">\$\delta {\mathbf{\omega }}_{\mathbf{k}}^{\ast}\$</tex-math></inline-formula> but including only one open loop term yields:
<disp-formula id="deqn21" class="display-formula"><tex-math notation="LaTeX">\begin{equation*}\delta {\rho ^ \star } = - {\left( {{P^T}{\mathcal{V}_{xx}}P} \right)^{ - 1}}P{\mathcal{V}_x}.\tag{21}\end{equation*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{equation*}\delta {\rho ^ \star } = - {\left( {{P^T}{\mathcal{V}_{xx}}P} \right)^{ - 1}}P{\mathcal{V}_x}.\tag{21}\end{equation*}</span></span></disp-formula></p><p>Note that this termination step is original, inspired from the Parameter-dependent DDP algorithm <a ref-type="bibr" anchor="ref12" id="context_ref_12_3b">[12]</a>. Once the backward pass is completed, a forward pass computes a new state trajectory. It is the result of the locally optimal changes in the control variables computed throughout the backward pass (Alg. 1). Then, the DDP algorithm consists in iteratively chaining the backward and forward passes until <inline-formula id=""><tex-math notation="LaTeX">\${\left\| {{\nabla _{{{\mathbf{\omega }}_k}}}{Q_k}} \right\|_\infty }\$</tex-math></inline-formula> is small enough according to a desired precision.</p><div class="figure figure-full table" id="alg1"><div class="figcaption"><b class="title">Algorithm 1 </b>Forward pass of the DDP algorithm, including a first step for estimating the initial state. ′ denotes the update of a variable during the forward pass.
</div><div class="img-wrap"><a href="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill.al1-p7-baill-large.gif"><img src="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill.al1-p7-baill-small.gif" alt="Table 1- Forward pass of the DDP algorithm, including a first step for estimating the initial state. ′ denotes the update of a variable during the forward pass.&#10;"/><div class="zoom" title="View Larger Image"/></a></div></div></div></div>
<div class="section" id="sec4"><div class="header article-hdr"><div class="kicker">
		                        SECTION IV.</div><h2>Alternative Estimation Methods</h2></div><p>This section briefly introduces two other estimation approaches, the EKF and the complementary filtering. They will be compared to the MAPE-DDP estimator in <a ref-type="sec" anchor="sec5" class="fulltext-link">Sec. V</a>.</p><div class="section_2" id="sec4a"><h3>A. Extended Kalman Filter approach</h3><p>When it comes to estimation of nonlinear system dynamics, the Extended Kalman Filter is still one of the most commonly estimator used today <a ref-type="bibr" anchor="ref14" id="context_ref_14_4a">[14]</a>. In this section, in order to benchmark the algorithm presented in <a ref-type="sec" anchor="sec3" class="fulltext-link">Sec. III</a> against the standard approach, we set up the EKF formulation starting from <a ref-type="disp-formula" anchor="deqn5" href="#deqn5" class="fulltext-link">Eqs. (5)</a> and <a ref-type="disp-formula" anchor="deqn6" href="#deqn6" class="fulltext-link">(6)</a>. Unlike in the MAPE-DDP approach, for estimating the current state <b>x<sub>k</sub></b>, the EFK algorithm only needs the estimation of the previous state <b>x</b><sub><b>k</b><i>−</i><b>1</b></sub> and the current measurement vector <b>y<sub>k</sub>.</b></p><p>The Kalman gains are computed using the Jacobians of the state transition equations with respect to the state and the process noise, and the Jacobians of the observation equations with respect to the state and to the measurement noise. The covariance of the process noise, and the covariance of the measurement noise need to be tuned according to sensors quality, experimental conditions, etc.</p><p>It is important to notice that contrary to DDP, the EKF approach does not back-propagate information from future to past, as performed by the backward pass of the DDP. Consequently, if the initial condition are noisy (as usually in robotics), it is then hard to retrieve a correct estimate of the state trajectoire. On contrary, our DDP-based approach allows to correctly estimate the initial state condition.</p></div><div class="section_2" id="sec4b"><h3>B. Recursive Estimation by Complementary Filtering</h3><p>In a former work, we proposed an original method which exploits the complementary accuracy between kinetic and kinematic measurements in the spectral domain and fuses them together using a recursive algorithm (REC, <a ref-type="bibr" anchor="ref4" id="context_ref_4_4b">[4]</a>). The core of that method relies on:</p><ul style="list-style-type:disc"><li><p>the coupling between the derivative of the angular momentum and the position of the CoM which yielded the recursivity of the approach:
<disp-formula id="deqn22" class="display-formula"><tex-math notation="LaTeX">\begin{equation*}{\dot {\mathcal{L}}} ^{\mathbf{c}} = {\tau ^0} + {\mathbf{f}} \times {\mathbf{c}},\tag{22}\end{equation*}</tex-math><span class="formula"><span class="link">View Source</span><img aria-describedby="qtip-0" style="display:inline;" title="Right-click on figure or equation for MathML and additional features." data-hasqtip="0" class="qtooltip moreInfo" alt="Right-click on figure for MathML and additional features." src="/assets/img/icon.support.gif" border="0" height="20" width="24"/><span class="tex tex2jax_ignore" style="display:none;">\begin{equation*}{\dot {\mathcal{L}}} ^{\mathbf{c}} = {\tau ^0} + {\mathbf{f}} \times {\mathbf{c}},\tag{22}\end{equation*}</span></span></disp-formula></p></li><li><p>the geometrical link between the CoM position and the central axis of the contact wrench <a ref-type="bibr" anchor="ref15" id="context_ref_15_4b">[15]</a>,</p></li><li><p>the complementary filtering of kinematic and kinetic data (<a ref-type="bibr" anchor="ref11" id="context_ref_11_4b">[11]</a>) for the CoM and the angular momentum derivative.</p></li></ul><p>When tested against the EKF approach, the CoM estimation was improved by this method, especially in the low-frequency domain (bias correction).</p></div></div>
<div class="section" id="sec5"><div class="header article-hdr"><div class="kicker">
		                        SECTION V.</div><h2>Estimation Comparison In Simulation</h2></div><p>This section presents an application of the three different estimation algorithms (MAPE-DDP, EKF, REC) to a centroidal state retrieval problem on a simulated walking motion of the HRP-2 robot. Starting from a simulated walking motion in an ideal environment (no noise, perfect model, exact dynamics), the exact state trajectory was extracted and then used as a ground-truth value for evaluating the different estimation methods. Then, for the same motion, the model and the measurements were purposefully noised in order to simulate realistic experimental conditions (mass distribution errors, force/torque sensors noise, kinematic defects). The estimators were run on this noised dataset and their outputs were compared to the ground-truth data. The segments CoM positions and masses of the model where biased by addition of random values (centered normal distribution, with standard deviation of 1 cm and 1 kg, respectively). For introducing noise in the inertia matrices of each segment, their singular value decomposition (SVD) were computed and random values where added to their singular values (centered normal distribution, with standard deviation of 1 kg.m<sup>2</sup>), before applying the inverse SVD, to retrieve the noised inertia matrices.</p><p>The values of the a priori standard deviations of the process and measurement noises for the EKF and the MAPE-DDP <inline-formula id=""><tex-math notation="LaTeX">\$\left( {{\Sigma _{{\omega _k}}},{\Sigma _{{\eta _k}}}} \right)\$</tex-math></inline-formula> were first initialized in accordance with the dynamics of the system and the power of the noise added in simulation. These values were then empirically tuned in order to obtain the best possible performances for each method (<a ref-type="table" anchor="table1" class="fulltext-link">Tab. I</a>).</p><p>To compare the estimations to the true state, the Frobenius norm of the time residuals was computed for each component <b>x<sub>i</sub></b> (<i>i</i> = 1<i>..</i>15). For better readability, log(1 + ||<b>x<sub>i</sub></b>||<i><sub>F</sub></i> ) are plotted in <a ref-type="fig" anchor="fig3" class="fulltext-link">Fig. 3</a>.</p><div class="figure figure-full table" id="table1"><div class="figcaption"><b class="title">TABLE I </b>A priori standard deviations on the measurements and process noises, tuned for the MAPE-DDP and EKF algorithms.
</div><div class="img-wrap"><a href="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill.t1-p7-baill-large.gif"><img src="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill.t1-p7-baill-small.gif" alt="Table I- A priori standard deviations on the measurements and process noises, tuned for the MAPE-DDP and EKF algorithms.&#10;"/><div class="zoom" title="View Larger Image"/></a></div></div></div>
<div class="section" id="sec6"><div class="header article-hdr"><div class="kicker">
		                        SECTION VI.</div><h2>Results And Discussion</h2></div><p>In the following, the results of the MAPE-DDP are analyzed. Then, the three estimators are compared. Finally, the MAPE-DDP estimator is tested on an experimental dataset.</p><div class="figure figure-full" id="fig2"><!--
          Workaround for combined images.Eg.- 1000116 Fig. 5
        --><div class="img-wrap"><a href="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill2-p7-baill-large.gif" data-fig-id="fig2"><img src="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill2-p7-baill-small.gif" alt="Fig. 2 - MAPE-DDP estimates of the centroidal state for a walking motion of the HRP-2 robot in simulation. The ground truth (orange), the estimation (green) and the measurements (blue, when available) are displayed for each component of the state.&#10;"/><div class="zoom" title="View Larger Image"/></a></div><div class="figcaption"><b class="title">Fig. 2 </b><fig><p>MAPE-DDP estimates of the centroidal state for a walking motion of the HRP-2 robot in simulation. The ground truth (orange), the estimation (green) and the measurements (blue, when available) are displayed for each component of the state.</p>
</fig></div><p class="links"><a href="/document/9561993/all-figures" class="all">Show All</a></p></div><div class="figure figure-full" id="fig3"><!--
          Workaround for combined images.Eg.- 1000116 Fig. 5
        --><div class="img-wrap"><a href="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill3-p7-baill-large.gif" data-fig-id="fig3"><img src="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill3-p7-baill-small.gif" alt="Fig. 3 - Barplot of the logarithm of the Frobenius norm for each component of the state vector x, for the EKF and the MAPE-DDP estimators. Only the CoM and the derivative of angular momentum are provided by the recursive estimator (REC). In order to display only positive values for interpreting the errors, the following formula was applied to each component : log(1 +||ei||F). Components of ${\mathbf{c}},\mathcal{P},\mathop {\mathcal{P}}\limits^. ,\mathcal{L},\mathop {\mathcal{L}}\limits^. $ are in m, kg m/s, kg m/s2, kg m2/s and kg m2/s2 respectively.&#10;"/><div class="zoom" title="View Larger Image"/></a></div><div class="figcaption"><b class="title">Fig. 3 </b><fig><p>Barplot of the logarithm of the Frobenius norm for each component of the state vector <i>x</i>, for the EKF and the MAPE-DDP estimators. Only the CoM and the derivative of angular momentum are provided by the recursive estimator (REC). In order to display only positive values for interpreting the errors, the following formula was applied to each component : log(1 +||<i>e<sub>i</sub></i>||<i>F</i>). Components of <inline-formula id=""><tex-math notation="LaTeX">\${\mathbf{c}},\mathcal{P},\mathop {\mathcal{P}}\limits^. ,\mathcal{L},\mathop {\mathcal{L}}\limits^. \$</tex-math></inline-formula> are in m, kg m/s, kg m/s<sup>2</sup>, kg m<sup>2</sup>/s and kg m<sup>2</sup>/s<sup>2</sup> respectively.</p>
</fig></div><p class="links"><a href="/document/9561993/all-figures" class="all">Show All</a></p></div><div class="figure figure-full" id="fig4"><!--
          Workaround for combined images.Eg.- 1000116 Fig. 5
        --><div class="img-wrap"><a href="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill4-p7-baill-large.gif" data-fig-id="fig4"><img src="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill4-p7-baill-small.gif" alt="Fig. 4 - Convergence of the MLE-DDP. In blue (left y axis, ▲), the minimization of the objective function Jk is displayed. In green, (right y axis, •), the decay of the gradient of the objective function is displayed. For the sake of readability, the termination criterion for generating this plot was ${\nabla _{{{\mathbf{\omega }}_k}}}{Q_k} \leq 1e - 3$, reached in 6 iterations.&#10;"/><div class="zoom" title="View Larger Image"/></a></div><div class="figcaption"><b class="title">Fig. 4 </b><fig><p>Convergence of the MLE-DDP. In blue (left y axis, ▲), the minimization of the objective function <i>J<sub>k</sub></i> is displayed. In green, (right y axis, •), the decay of the gradient of the objective function is displayed. For the sake of readability, the termination criterion for generating this plot was <inline-formula id=""><tex-math notation="LaTeX">\${\nabla _{{{\mathbf{\omega }}_k}}}{Q_k} \leq 1e - 3\$</tex-math></inline-formula>, reached in 6 iterations.</p>
</fig></div><p class="links"><a href="/document/9561993/all-figures" class="all">Show All</a></p></div><div class="section_2" id="sec6a"><h3>A. MAPE-DDP</h3><p>The convergence of the proposed algorithm is depicted in <a ref-type="fig" anchor="fig4" class="fulltext-link">Fig. 4</a>. For the sake of readability, the termination criterion for generating this plot was <inline-formula id=""><tex-math notation="LaTeX">\${\left\| {{\nabla _{{{\mathbf{\omega }}_k}}}{Q_k}} \right\|_\infty } \leq 1{e^{ - 3}}\$</tex-math></inline-formula>. In our tests, this threshold was reached in 6 iterations. The results of the MAPE-DDP estimation for a walking motion of the HRP-2 robot are displayed in <a ref-type="fig" anchor="fig2" class="fulltext-link">Fig. 2</a>. This representation gives a visual insight into the signal to noise ratio of the input measurements of the estimation problem (in blue). These results also illustrate the performance of the MAPE-DDP algorithm in terms of noise canceling. For instance, the noise included into the CoM measurements, was filtered (<a ref-type="fig" anchor="fig2" class="fulltext-link">Fig. 2</a>, rows 1-3) to the exception of a remaining offset on the z component, which comes from its non-observability <a ref-type="bibr" anchor="ref11" id="context_ref_11_6a">[11]</a>. Concerning the angular momentum (<a ref-type="fig" anchor="fig2" class="fulltext-link">Fig. 2</a>, rows 10-12), both the low-frequency noise (coming from mass distribution errors) and the high-frequency noise (coming from numerical differentiation involved in the computation of <inline-formula id=""><tex-math notation="LaTeX">\$\mathcal{L}\$</tex-math></inline-formula>) are well filtered. Interestingly, even the parts of the centroidal state for which no measurement is directly available (<inline-formula id=""><tex-math notation="LaTeX">\$\mathcal{P}\$</tex-math></inline-formula> and <inline-formula id=""><tex-math notation="LaTeX">\$\mathop {\mathcal{L}}\limits^. \$</tex-math></inline-formula>, 2, rows 4-6 and 13-15) are accurately retrieved. For a 12.5s motion, the convergence of the MAPE-DDP estimator was achieved in about 4.5s (non-optimized Python code), which is promising for real-time applications using a moving horizon implementation.</p></div><div class="section_2" id="sec6b"><h3>B. MAPE-DDP vs EKF</h3><p>Overall, the MAPE-DDP outperformed the EKF and the recursive approach. An emphasis must be put on the choice of the noise for simulating this study. Both the EKF and the MAPE-DDP are derived under the hypothesis of additive Gaussian noise on the process and measurements. However, in order to model real conditions, noise was also added to the model which, through the equations of the dynamics, results in non-additive and non-Gaussian noises both on the measurements and on the state transition equation. Therefore, we claim that the comparison between EKF and our approach is valid, as the differences in performance are not the result of unfair hypotheses about the noise. They rather come from the structure of the MAPE-DDP estimator which exploits a bigger set of measurements (<i>n</i>, arbitrarily big, versus 1 for the EKF), and thus is able to exploit the equations of the dynamics in a more accurate way.</p><div class="figure figure-full" id="fig5"><!--
          Workaround for combined images.Eg.- 1000116 Fig. 5
        --><div class="img-wrap"><a href="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill5-p7-baill-large.gif" data-fig-id="fig5"><img src="/mediastore_new/IEEE/content/media/9560720/9560666/9561993/baill5-p7-baill-small.gif" alt="Fig. 5 - MAPE-DDP and EKF estimates of the centroidal state for walking motion of the HRP-2 robot in experimental conditions.&#10;"/><div class="zoom" title="View Larger Image"/></a></div><div class="figcaption"><b class="title">Fig. 5 </b><fig><p>MAPE-DDP and EKF estimates of the centroidal state for walking motion of the HRP-2 robot in experimental conditions.</p>
</fig></div><p class="links"><a href="/document/9561993/all-figures" class="all">Show All</a></p></div></div><div class="section_2" id="sec6c"><h3>C. MAPE-DDP vs REC</h3><p>Compared to the recursive complementary approach, in addition to providing the complete centroidal state versus only two components, the proposed method yields a better estimation of the derivative of the angular momentum (at least one order of magnitude). The accuracy of the estimation of the position of the CoM is better on the Y and Z axes using the MAPE-DDP. However, it is worth mentioning that the REC estimator, leveraging the coupling between the derivative of the angular momentum and the position of the CoM, performs better at estimating the CoM on the X axis.</p></div><div class="section_2" id="sec6d"><h3>D. Application to robot experimental data</h3><p>To complete the analysis performed in simulation, the MAPE-DDP and the EKF algorithms were used on real kinematic and kinetic data obtained during a 20 cm-wide locomotion lasting for 12.5 seconds with the HRP-2 robot taken from <a ref-type="bibr" anchor="ref16" id="context_ref_16_6d">[16]</a>. The values of the encoders and of the 6-axis forces and torques sensors located in the ankles of the robot were collected at 200 Hz. The kinematic estimation of the CoM was performed by implementing an odometry algorithm which assumed that, when a foot is in contact, it cannot slip. <a ref-type="fig" anchor="fig5" class="fulltext-link">Fig. 5</a> displays the estimation of the centroidal state for this experiments. It shows that both the EKF and the MAPE-DDP provide a consistent estimation of the centroidal state. The estimation profiles are similar to the ones obtained in simulation (for an approximately same gait), apart from a trend to smaller values of <inline-formula id=""><tex-math notation="LaTeX">\$\mathop {\mathcal{L}}\limits^. \$</tex-math></inline-formula> coming from a less dynamical motion with the real robot. However, the estimates provided by the EKF are less smooth <inline-formula id=""><tex-math notation="LaTeX">\$(\mathop {\mathcal{P}}\limits^. ,\mathcal{L},{\text{ and }}\mathop {\mathcal{L}}\limits^. )\$</tex-math></inline-formula> with a trend to drifting <inline-formula id=""><tex-math notation="LaTeX">\$\left( {{{\mathop {\mathcal{P}}\limits^. }_Y}} \right)\$</tex-math></inline-formula> while sometimes being off-phase with regard to the MAPE-DDP estimation <inline-formula id=""><tex-math notation="LaTeX">\$\left( {{{\mathop {\mathcal{P}}\limits^. }_Y}} \right)\$</tex-math></inline-formula>. The same behavior was observed on the simulated dataset, leading to larger RMSEs obtained with the EKF, as reported in <a ref-type="fig" anchor="fig3" class="fulltext-link">Fig. 3</a>.</p></div></div>
<div class="section" id="sec7"><div class="header article-hdr"><div class="kicker">
		                        SECTION VII.</div><h2>Conclusions And Future Work</h2></div><p>This work was first carried out in simulation, to compare the different estimators to ground-truth data. In this context, the MAPE-DDP estimator was proven to be more accurate than other methods. Then, we successfully tested the MAPE-DDP and the EKF estimators on real experimental data, confirming the superiority of MAPE-DDP over EKF. As a future work, we plan to embed this estimation block into our control architecture of biped <a ref-type="bibr" anchor="ref17" id="context_ref_17_7">[17]</a> and quadruped robots <a ref-type="bibr" anchor="ref18" id="context_ref_18_7">[18]</a>, for closing the loop on the control of the centroidal state (better stability, push recovery, etc.). To do so, a moving horizon estimation scheme should be implemented in optimized C/C++ in order to make the convergence time fit inside the control loop. In this case, the speed/accuracy trade-off should be thoroughly investigated in order to maintain an accurate estimation while going real-time <a ref-type="bibr" anchor="ref19" id="context_ref_19_7">[19]</a>. Next, the presented approach should be compared to Kalman smoothing algorithms both in terms of accuracy and performances, as they present similarities (back-propagation of measurement information), and the theoretical link between them should be investigated. Also, one promising extension of this work should be to include the complementary filtering approach into the MLE formulation, in order to get the best of both worlds.</p></div>
<h3>ACKNOWLEDGMENTS</h3><p>This work was partially supported by the TransMedTech institute, the European project RoboCom++ and the French government under management of Agence Nationale de la Recherche as part of the "Investissements d’avenir" program, reference ANR-19-P3IA-0001 (PRAIRIE 3IA Institute).</p></div></div>
